version: '3.8'

networks:
  meta-network:
    name: meta-network
    driver: bridge

services:
  common-lib:
    build:
      context: .
      dockerfile: common-lib/Dockerfile
    container_name: common-lib
    networks:
      - meta-network
    volumes:
      - common-maven:/root/.m2
    command: ["mvn", "clean", "install", "-DskipTests"]

  user-server1:
    build:
      context: .
      dockerfile: user-server/Dockerfile
    image: 233777024181.dkr.ecr.ap-northeast-2.amazonaws.com/sjin/docker/test
    container_name: user-server1
    depends_on:
      common-lib:
        condition: service_started
      mysql:
        condition: service_healthy
    ports:
      - "1113:1113"
    networks:
      - meta-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - common-maven:/root/.m2

  nginx:
    image: openresty/openresty:1.21.4.1-alpine
    container_name: nginx-lg
    volumes:
      - ./nginx/config/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
      - ./nginx/lua:/etc/nginx/lua:ro
    ports:
      - "80:80"
    depends_on:
      - user-server1
      - redis 
    networks:
      - meta-network

  redis:
    image: redis:6.2
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - meta-network
    volumes:
      - ./database/config/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    ports:
      - "9121:9121" # Prometheus default metrics port
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      - redis
    networks:
      - meta-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    networks:
      - meta-network
    depends_on:
      - redis-exporter
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-storage:/var/lib/grafana
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - meta-network
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "5131"
      MYSQL_USER: "sjin"
      MYSQL_PASSWORD: "5131"
      MYSQL_ROOT_HOST: "%"
    ports:
      - "3307:3306"
    networks:
      - meta-network
    volumes:
      - ./database/init-scripts/init-mysql.sql:/docker-entrypoint-initdb.d/init-mysql.sql
      - ./database/init-scripts/mock-data.sql:/docker-entrypoint-initdb.d/mock-data.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  common-maven:
  grafana-storage: